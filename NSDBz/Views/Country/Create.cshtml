@model NSDBz.Models.Country

@{
    ViewBag.Title = "Create";
}
<link href="https://fonts.googleapis.com/css?family=Abel" rel="stylesheet">

<h2 style="font-family: 'Abel', sans-serif; text-align:center">Create</h2>


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        
        <hr />
		<br />
		@Html.ValidationSummary(true, "", new { @class = "text-danger" })
		<div class="form-group">
			<div class="control-label col-md-2" style="font-weight:600;">Image URL</div>
			<div class="col-md-10">
				@Html.EditorFor(model => model.ImgUrl, new { htmlAttributes = new { @class = "form-control" } })
				@Html.ValidationMessageFor(model => model.ImgUrl, "", new { @class = "text-danger" })
			</div>
		</div>

        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Size, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Size, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Size, "", new { @class = "text-danger" })
            </div>
        </div>

		@{
			List<SelectListItem> listItems = new List<SelectListItem>();
			listItems.Add(new SelectListItem
			{
				Text = "Both",
				Value = "Both"
			});
			listItems.Add(new SelectListItem
			{
				Text = "Northern",
				Value = "Northern",

			});
			listItems.Add(new SelectListItem
			{
				Text = "Southern",
				Value = "Southern"
			});

		}
		<div class="form-group">
			@Html.LabelFor(model => model.Hemisphere, htmlAttributes: new { @class = "control-label col-md-2" })
			<div class="col-md-10" style="top:7px;">
				@Html.DropDownListFor(model => model.Hemisphere, listItems, "-- Select Hemisphere --")
				@Html.ValidationMessageFor(model => model.Hemisphere, "", new { @class = "text-danger" })
			</div>
		</div>

		
			<div class="form-group" style="margin-top:45px">
				<div class="col-md-offset-2 col-md-10">
					<input type="submit" value="Create" class="btn btn-default" style="font-size:1em;" />

					|
					@Html.ActionLink("Countries", "Index")
				</div>
			</div>
		</div>

}



@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
